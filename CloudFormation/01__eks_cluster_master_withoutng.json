{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "EKS cluster (dedicated VPC: false, dedicated IAM: true)",
	"Resources": {
		"ClusterSharedNodeSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Communication between all nodes in the cluster",
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "${AWS::StackName}/ClusterSharedNodeSecurityGroup"
						}
					}
				],
				"VpcId": "vpc-****************"
			}
		},
		"ControlPlane": {
			"Type": "AWS::EKS::Cluster",
			"Properties": {
				"Name": "eksnamecluster",
				"ResourcesVpcConfig": {
					"SecurityGroupIds": [
						{
							"Ref": "ControlPlaneSecurityGroup"
						}
					],
					"SubnetIds": [
						"subnet-*****************",
						"subnet-*****************",
						"subnet-*****************",
						"subnet-*****************",
						"subnet-*****************",
						"subnet-*****************"
					]
				},
				"RoleArn": {
					"Fn::GetAtt": "ServiceRole.Arn"
				},
				"Version": "1.14"
			}
		},
		"ControlPlaneSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Communication between the control plane and worker nodegroups",
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "${AWS::StackName}/ControlPlaneSecurityGroup"
						}
					}
				],
				"VpcId": "vpc-************"
			}
		},
		"FargatePodExecutionRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [
						{
							"Action": [
								"sts:AssumeRole"
							],
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"eks.amazonaws.com",
									"eks-fargate-pods.amazonaws.com"
								]
							}
						}
					],
					"Version": "2012-10-17"
				},
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy"
				]
			}
		},
		"IngressDefaultClusterToNodeSG": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"Properties": {
				"Description": "Allow managed and unmanaged nodes to communicate with each other (all ports)",
				"FromPort": 0,
				"GroupId": {
					"Ref": "ClusterSharedNodeSecurityGroup"
				},
				"IpProtocol": "-1",
				"SourceSecurityGroupId": {
					"Fn::GetAtt": "ControlPlane.ClusterSecurityGroupId"
				},
				"ToPort": 65535
			}
		},
		"IngressInterNodeGroupSG": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"Properties": {
				"Description": "Allow nodes to communicate with each other (all ports)",
				"FromPort": 0,
				"GroupId": {
					"Ref": "ClusterSharedNodeSecurityGroup"
				},
				"IpProtocol": "-1",
				"SourceSecurityGroupId": {
					"Ref": "ClusterSharedNodeSecurityGroup"
				},
				"ToPort": 65535
			}
		},
		"IngressNodeToDefaultClusterSG": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"Properties": {
				"Description": "Allow unmanaged nodes to communicate with control plane (all ports)",
				"FromPort": 0,
				"GroupId": {
					"Fn::GetAtt": "ControlPlane.ClusterSecurityGroupId"
				},
				"IpProtocol": "-1",
				"SourceSecurityGroupId": {
					"Ref": "ClusterSharedNodeSecurityGroup"
				},
				"ToPort": 65535
			}
		},
		"PolicyCloudWatchMetrics": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyDocument": {
					"Statement": [
						{
							"Action": [
								"cloudwatch:PutMetricData"
							],
							"Effect": "Allow",
							"Resource": "*"
						}
					],
					"Version": "2012-10-17"
				},
				"PolicyName": {
					"Fn::Sub": "${AWS::StackName}-PolicyCloudWatchMetrics"
				},
				"Roles": [
					{
						"Ref": "ServiceRole"
					}
				]
			}
		},
		"PolicyNLB": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyDocument": {
					"Statement": [
						{
							"Action": [
								"elasticloadbalancing:*",
								"ec2:CreateSecurityGroup",
								"ec2:Describe*"
							],
							"Effect": "Allow",
							"Resource": "*"
						}
					],
					"Version": "2012-10-17"
				},
				"PolicyName": {
					"Fn::Sub": "${AWS::StackName}-PolicyNLB"
				},
				"Roles": [
					{
						"Ref": "ServiceRole"
					}
				]
			}
		},
		"ServiceRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [
						{
							"Action": [
								"sts:AssumeRole"
							],
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"eks.amazonaws.com",
									"eks-fargate-pods.amazonaws.com"
								]
							}
						}
					],
					"Version": "2012-10-17"
				},
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
					"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
				]
			}
		}
	},
	"Outputs": {
		"ARN": {
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}::ARN"
				}
			},
			"Value": {
				"Fn::GetAtt": "ControlPlane.Arn"
			}
		},
		"CertificateAuthorityData": {
			"Value": {
				"Fn::GetAtt": "ControlPlane.CertificateAuthorityData"
			}
		},
		"ClusterSecurityGroupId": {
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}::ClusterSecurityGroupId"
				}
			},
			"Value": {
				"Fn::GetAtt": "ControlPlane.ClusterSecurityGroupId"
			}
		},
		"ClusterStackName": {
			"Value": {
				"Ref": "AWS::StackName"
			}
		},
		"Endpoint": {
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}::Endpoint"
				}
			},
			"Value": {
				"Fn::GetAtt": "ControlPlane.Endpoint"
			}
		},
		"FargatePodExecutionRoleARN": {
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}::FargatePodExecutionRoleARN"
				}
			},
			"Value": {
				"Fn::GetAtt": "FargatePodExecutionRole.Arn"
			}
		},
		"FeatureNATMode": {
			"Value": "Disable"
		},
		"SecurityGroup": {
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}::SecurityGroup"
				}
			},
			"Value": {
				"Ref": "ControlPlaneSecurityGroup"
			}
		},
		"ServiceRoleARN": {
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}::ServiceRoleARN"
				}
			},
			"Value": {
				"Fn::GetAtt": "ServiceRole.Arn"
			}
		},
		"SharedNodeSecurityGroup": {
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}::SharedNodeSecurityGroup"
				}
			},
			"Value": {
				"Ref": "ClusterSharedNodeSecurityGroup"
			}
		},
		"SubnetsPrivate": {
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}::SubnetsPrivate"
				}
			},
			"Value": {
				"Fn::Join": [
					",",
					[
						"subnet-*****************",
						"subnet-*****************",
						"subnet-*****************"
					]
				]
			}
		},
		"SubnetsPublic": {
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}::SubnetsPublic"
				}
			},
			"Value": {
				"Fn::Join": [
					",",
					[
						"subnet-*****************",
						"subnet-*****************",
						"subnet-*****************"
					]
				]
			}
		},
		"VPC": {
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}::VPC"
				}
			},
			"Value": "vpc-****************"
		}
	}
}